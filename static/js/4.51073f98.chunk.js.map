{"version":3,"sources":["helpers/formatTime.js","views/playerButtons.jsx"],"names":["formatTime","seconds","Math","floor","minutes","parseInt","PlayerButton","playerButtonHandler","playing","currentMusicTime","changeCurrentMusicTime","max","className","href","type","style","width","id","min","onChange","e","target","value","isNaN","onClick","title"],"mappings":"qKAAe,SAASA,EAAWC,GAE/BA,GAAe,MADJC,KAAKC,MAAMF,EAAO,OAG7BA,GAAgB,KADJC,KAAKC,MAAMF,EAAO,MAE9B,IAAIG,EAAUF,KAAKC,MAAMF,EAAU,IAEnC,OADAA,GAAqB,GAAVG,EACJA,EAAU,IAAMC,SAASJ,GCLrB,SAASK,EAAT,GAMX,IALFC,EAKC,EALDA,oBACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,iBACAC,EAEC,EAFDA,uBACAC,EACC,EADDA,IAEA,OACE,qCACE,sBAAKC,UAAU,OAAf,UACE,mBAAGC,KAAK,IAAR,SAAab,EAAWS,KACxB,mBAAGI,KAAK,IAAR,SAAab,EAAWW,QAE1B,uBACEG,KAAK,QACLC,MAAO,CAAEC,MAAO,QAChBC,GAAG,eACHC,IAAI,IACJC,SAAU,SAACC,GAAD,OAAOV,EAAuBU,EAAEC,OAAOC,QACjDX,IAAKY,MAAMZ,GAAO,EAAIA,EACtBW,MAAOb,IAGT,sBAAKG,UAAU,OAAf,UACE,mBAAGC,KAAK,IAAIW,QAAS,kBAAMjB,EAAoB,YAA/C,SACE,mBAAGU,GAAG,UAAUL,UAAU,oBAE5B,mBAAGC,KAAK,IAAIW,QAAS,kBAAMjB,EAAoB,aAA/C,SACE,mBAAGK,UAAU,iBAAiBK,GAAG,OAAOQ,MAAM,eAEhD,mBAAGZ,KAAK,IAAIW,QAAS,kBAAMjB,EAAoB,eAA/C,SACE,mBACEK,UAAWJ,EAAU,cAAgB,aACrCS,GAAG,OACHQ,MAAM,WAGV,mBAAGZ,KAAK,IAAIW,QAAS,kBAAMjB,EAAoB,SAA/C,SACE,mBAAGK,UAAU,gBAAgBK,GAAG,OAAOQ,MAAM,WAE/C,mBAAGZ,KAAK,IAAIW,QAAS,kBAAMjB,EAAoB,WAA/C,SACE,mBAAGU,GAAG,SAASL,UAAU","file":"static/js/4.51073f98.chunk.js","sourcesContent":["export default function formatTime(seconds) {\r\n    var days = Math.floor(seconds / (24 * 60 * 60));\r\n    seconds -= days * (24 * 60 * 60);\r\n    var hours = Math.floor(seconds / (60 * 60));\r\n    seconds -= hours * (60 * 60);\r\n    var minutes = Math.floor(seconds / 60);\r\n    seconds -= minutes * 60;\r\n    return minutes + \":\" + parseInt(seconds);\r\n}","import React, { useRef, useState } from \"react\";\r\nimport formatTime from \"../helpers/formatTime\";\r\nexport default function PlayerButton({\r\n  playerButtonHandler,\r\n  playing,\r\n  currentMusicTime,\r\n  changeCurrentMusicTime,\r\n  max,\r\n}) {\r\n  return (\r\n    <>\r\n      <div className=\"time\">\r\n        <a href=\"#\">{formatTime(currentMusicTime)}</a>\r\n        <a href=\"#\">{formatTime(max)}</a>\r\n      </div>\r\n      <input\r\n        type=\"range\"\r\n        style={{ width: \"100%\" }}\r\n        id=\"timeInstance\"\r\n        min=\"0\"\r\n        onChange={(e) => changeCurrentMusicTime(e.target.value)}\r\n        max={isNaN(max) ? 0 : max}\r\n        value={currentMusicTime}\r\n      />\r\n\r\n      <div className=\"btns\">\r\n        <a href=\"#\" onClick={() => playerButtonHandler(\"retweet\")}>\r\n          <i id=\"retweet\" className=\"fa fa-retweet\"></i>\r\n        </a>\r\n        <a href=\"#\" onClick={() => playerButtonHandler(\"previous\")}>\r\n          <i className=\"fa fa-backward\" id=\"prev\" title=\"Previous\"></i>\r\n        </a>\r\n        <a href=\"#\" onClick={() => playerButtonHandler(\"play-pause\")}>\r\n          <i\r\n            className={playing ? \"fa fa-pause\" : \"fa fa-play\"}\r\n            id=\"play\"\r\n            title=\"play\"\r\n          ></i>\r\n        </a>\r\n        <a href=\"#\" onClick={() => playerButtonHandler(\"next\")}>\r\n          <i className=\"fa fa-forward\" id=\"next\" title=\"Next\"></i>\r\n        </a>\r\n        <a href=\"#\" onClick={() => playerButtonHandler(\"random\")}>\r\n          <i id=\"random\" className=\"fa fa-random\"></i>\r\n        </a>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}